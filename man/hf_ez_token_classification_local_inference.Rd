% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ez.R
\name{hf_ez_token_classification_local_inference}
\alias{hf_ez_token_classification_local_inference}
\title{Token Classification Local Inference}
\usage{
hf_ez_token_classification_local_inference(
  string,
  aggregation_strategy = "simple",
  tidy = TRUE,
  ...
)
}
\arguments{
\item{string}{a string to be classified}

\item{aggregation_strategy}{(Default: simple). There are several aggregation strategies. \cr
none: Every token gets classified without further aggregation.  \cr
simple: Entities are grouped according to the default schema (B-, I- tags get merged when the tag is similar).  \cr
first: Same as the simple strategy except words cannot end up with different tags. Words will use the tag of the first token when there is ambiguity.  \cr
average: Same as the simple strategy except words cannot end up with different tags. Scores are averaged across tokens and then the maximum label is applied.  \cr
max: Same as the simple strategy except words cannot end up with different tags. Word entity will be the token with the maximum score.  \cr}

\item{tidy}{Whether to tidy the results into a tibble. Default: TRUE (tidy the results)}
}
\value{
The results of the inference
}
\description{
Token Classification Local Inference
}
\seealso{
\url{https://huggingface.co/docs/transformers/main/en/pipeline_tutorial}
}
